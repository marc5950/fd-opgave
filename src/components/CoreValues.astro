---
//@ts-nocheck
import coreValues from "@data/coreValues.json";
console.log(coreValues);
import DynamicIcon from "./helpers/DynamicIcon.astro";

// Props
const { surface = "primary" } = Astro.props;
---

<section
  class="container"
  data-surface={surface}
  style="--container-background: var(--core-bg)"
>
  <div class="core-values">
    <div class="core-values-content">
      <div class="core-values-info">
        <p style="--text-color: var(--core-text); text-transform: uppercase;">
          Growing with our Clients
        </p>

        <h2 style="--text-color: var(--core-text)">{coreValues.title}</h2>
        <p style="--text-color: var(--core-text)">{coreValues.subtitle}</p>
      </div>
      <a
        class="button01"
        style="--button-color01: var(--core-btn-bg); --button-color02: var(--core-btn-text);"
        href={coreValues.button.link}>{coreValues.button.text}</a
      >
    </div>
    <ul>
      {
        coreValues.values.map((value) => (
          <li>
            <DynamicIcon name={value.icon} class="top-icon" />
            <h3>{value.title}</h3>
            <p>{value.description}</p>
            <a href={value.link}>
              Read More{" "}
              <span>
                <DynamicIcon name="arrow--right" />
              </span>
            </a>
          </li>
        ))
      }
    </ul>
  </div>
</section>

<style>
  [data-surface="primary"] {
    --core-text: var(--text-light);
    --core-bg: var(--primary-color03);
    --core-btn-bg: var(--secondary-color02);
    --core-btn-text: var(--text-dark);
  }

  [data-surface="secondary"] {
    --core-text: var(--text-dark);
    --core-bg: var(--secondary-color02);
    --core-btn-bg: var(--primary-color03);
    --core-btn-text: var(--text-light);
  }
  .core-values {
    display: flex;
    flex-direction: column;
  }

  .core-values-content {
    display: flex;
    justify-content: space-between;
    align-items: end;
    .core-values-info {
      max-width: 65ch;
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }
    @media (max-width: 900px) {
      flex-direction: column;
      align-items: start;
      gap: 3rem;
    }
  }

  ul {
    margin-top: 3rem;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 2rem;

    li {
      --bg-color: var(--secondary-color01);
      background: var(--bg-color);
      padding: 2rem;
      border-radius: 20px;
      display: flex;
      flex-direction: column;
      gap: 1rem;
      .top-icon {
        width: 50px;
        height: 50px;
        color: var(--text-light);
        background: var(--primary-color03);
        border-radius: 100%;
        padding: 0.7rem;
      }
      h3 {
        --font-size: var(--heading06);
      }
      p {
        --text-color: var(--text-gray);
        flex-grow: 1;
      }
      a {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        --text-color: var(--primary-color03);
        font-weight: bold;
        svg {
          width: 1rem;
          height: 1rem;
        }
      }
    }
  }
</style>
